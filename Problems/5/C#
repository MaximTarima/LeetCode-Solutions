/*
Date: 12/10/2023
Runtime: 66 ms (97.70%)
Memory: 37.9 MB (69.86%)
*/
public class Solution {
    public string LongestPalindrome(string s) {
        int start = 0, end = 0;

        for (int i = 0; i < s.Length; i++) {
            int len = Math.Max(ExpandAroundCenter(s, i, i), ExpandAroundCenter(s, i, i + 1));
            if (len > end - start) {
                start = i - (len - 1) / 2;
                end = i + len / 2;
            }
        }
        return s.Substring(start, end - start + 1);
    }

    private int ExpandAroundCenter(string s, int left, int right) {
        while (left >= 0 && right < s.Length && s[left] == s[right]) {
            left--;
            right++;
        }
        return right - left - 1;
    }
}
